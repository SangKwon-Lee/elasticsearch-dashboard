import dayjs from 'dayjs';
import { MarkerType } from 'react-flow-renderer';
// * TransactionMockUp
export const TransactionMockUp = [
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'rtasdf123rfdasfq2ewf3wfeqsasdfasdfy',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'dfasdf123rfdasfq2ewf3wfeqsasdfasdfg',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'sdasdf123rfdasfq2ewf3wfeqsasdfasdff',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'weasdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'xcasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'rfasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'tasdf123rfdasfq2ewf3wfeqsasdfasdfgb',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'rtasdf123rfdasfq2ewf3wfeqsasdfasdfy',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'dfasdf123rfdasfq2ewf3wfeqsasdfasdfg',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'sdasdf123rfdasfq2ewf3wfeqsasdfasdff',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'weasdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'xcasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'rfasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'tasdf123rfdasfq2ewf3wfeqsasdfasdfgb',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqs',
    type: '타발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
  {
    gid: 'asdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'rtasdf123rfdasfq2ewf3wfeqsasdfasdfy',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'dfasdf123rfdasfq2ewf3wfeqsasdfasdfg',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ING',
  },
  {
    gid: 'sdasdf123rfdasfq2ewf3wfeqsasdfasdff',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'weasdf123rfdasfq2ewf3wfeqsasdfasdf',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'xcasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'rfasdf123rfdasfq2ewf3wfeqsasdfasdfv',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'ERROR',
  },
  {
    gid: 'tasdf123rfdasfq2ewf3wfeqsasdfasdfgb',
    type: '당발',
    startTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    endTimestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    elapsedTime: '32',
    status: 'OK',
  },
];

export const TransectionDetailListMockup = [
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: 'asdfasfasdfas',
  },
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: '',
  },
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: '',
  },
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: '',
  },
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: '',
  },
  {
    id: 1,
    gid: 'asdasdasdasdas',
    mstSeq: 'sadasdasdasdasd',
    timestamp: '123hasfda',
    serviceType: 'askdhlfjasfsg',
    serviceCode: 'askdhlfjasfsg',
    interfacePattern: 'askdhlfjasfsg',
    sourceChannel: 'askdhlfjasfsg',
    targetChannel: 'askdhlfjasfsg',
    serviceNode: 'askdhlfjasfsg',
    bankName: 'askdhlfjasfsg',
    interfaceId: 'askdhlfjasfsg',
    interfaceName: '계정계 TO 미통합요청거래',
    status: 'OK',
    bankCode: '347',
    errorMessage: '',
  },
];

const NodeStyle2 = {
  border: `1px solid black`,
  backgroundColor: '#5BE584',
  width: 100,
  height: 60,
  FlexDirection: 'column',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  borderRadius: 10,
};

const NodeStyle3 = {
  border: `1px solid black`,
  backgroundColor: '#84A9FF',
  width: 100,
  height: 60,
  FlexDirection: 'column',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  borderRadius: 10,
};

const NodeStyle4 = {
  border: `1px solid black`,
  backgroundColor: '#FFA48D',
  width: 100,
  height: 60,
  FlexDirection: 'column',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  borderRadius: 10,
};
const NodeStyle5 = {
  border: `1px solid black`,
  backgroundColor: '#FFE16A',
  width: 100,
  height: 60,
  FlexDirection: 'column',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  borderRadius: 10,
};

export const TransactionNode = [
  {
    id: '1',
    type: 'selectorNode',
    data: {
      label: '오픈뱅킹 오픈뱅킹 오픈뱅킨',
      node: '2',
      status: 'OK',
      startTimestamp: '12:18.2',
      endTimestamp: '12:13.3',
      elapsedTime: '00:00:2',
      interface: 'FWKO31_NIBO00002[계정계 TO 미통합요청거래]',
      userNo: '02',
      interfaceId: 'ASD',
      interfaceName: 'ASD',
      interfacePattern: 'ASD',
      bankCode: 'ASD',
      bankName: 'asd',
      beforeSendChannelCode: '123',
      flowId: 'ASD',
      sourceChannel: 'string',
      sourceIpPort: 'string',
      targetChannel: 'string',
      targetIpPort: 'string',
      mstSeq: 'string',
      serviceCode: 'string',
      serviceType: 'string',
      firstSendChannelCode: 'string',
      branchCode: 'string',
      serviceName: 'string',
      message: 'string',
      errorMessage: 'string',
      secondLabel: 'string',
      details: {
        timestamp: 'ASD',
        step: 'ASD',
        status: 'ASD',
      },
    },
    position: { x: 0, y: 0 },
    style: NodeStyle5,
  },
  {
    id: '2',
    type: 'selectorNode',
    data: { label: 'MCI', ms: '(342ms)' },
    style: NodeStyle3,
    position: { x: 200, y: 0 },
  },
  {
    id: '3',
    type: 'selectorNode',
    data: { label: 'Framework', ms: '(43ms)' },
    style: NodeStyle2,
    position: { x: 400, y: 0 },
  },
  {
    id: '4',
    type: 'selectorNode',
    data: { label: 'Framework', ms: '(43ms)' },
    style: NodeStyle2,
    position: { x: 600, y: 0 },
  },
  {
    id: '5',
    type: 'selectorNode',
    data: { label: 'FEP', ms: '(298ms)' },
    style: NodeStyle5,
    position: { x: 800, y: -150 },
  },
  {
    id: '6',
    type: 'selectorNode',
    data: { label: 'FEP', ms: '(129ms)' },
    style: NodeStyle5,
    position: { x: 800, y: 0 },
  },
  {
    id: '7',
    type: 'selectorNode',
    data: { label: 'FEP', ms: '(98ms)' },
    style: NodeStyle5,
    position: { x: 800, y: 150 },
  },
  {
    id: '8',
    type: 'selectorNode',
    data: { label: '한국은행' },
    style: NodeStyle4,
    position: { x: 1000, y: -150 },
  },
  {
    id: '9',
    type: 'selectorNode',
    data: { label: '금결원' },
    style: NodeStyle4,
    position: { x: 1000, y: 0 },
  },
  {
    id: '10',
    type: 'selectorNode',
    data: { label: '한국은행' },
    style: NodeStyle4,
    position: { x: 1000, y: 150 },
  },
];

export const TransactionEdges = [
  {
    id: '1',
    source: '1',
    target: '2',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#3366FF' },
    label: '100',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    labelBgBorderRadius: 5,
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '2',
    source: '2',
    target: '3',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#3366FF' },
    label: '200',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '3',
    source: '4',
    target: '5',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '100',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '4',
    source: '4',
    target: '6',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '100',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '5',
    source: '4',
    target: '7',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '100',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '6',
    source: '5',
    target: '8',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '200',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '7',
    source: '6',
    target: '9',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '200',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '8',
    source: '7',
    target: '10',
    sourceHandle: '3',
    animated: true,
    style: { stroke: '#1939B7' },
    label: '200',
    labelStyle: { fill: '#3366FF', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '9',
    source: '8',
    target: '5',
    targetHandle: '4',
    animated: true,
    data: {
      msg: '에러메시지 입니다',
    },
    style: { stroke: '#FF4842' },
    label: 'ERR',
    labelStyle: { fill: '#FF4842', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '10',
    source: '9',
    target: '6',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '300',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '11',
    source: '10',
    target: '7',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '300',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '12',
    source: '7',
    target: '4',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '400',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '13',
    source: '6',
    target: '4',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '400',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '14',
    source: '3',
    target: '2',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '300',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },

  {
    id: '15',
    source: '2',
    target: '1',
    targetHandle: '4',
    animated: true,
    style: { stroke: '#54D62C' },
    label: '400',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: '16',
    source: '1',
    target: '2',
    sourceHandle: '5',
    targetHandle: '6',
    animated: true,
    style: { stroke: 'transparent' },
    label: '23:23.112',
    labelStyle: { fill: '#54D62C', fontWeight: 700 },
    labelBgStyle: {
      fill: '#fff',
    },
    // markerEnd: {
    //   type: MarkerType.ArrowClosed,
    // },
  },
  // {
  //   id: '1',
  //   source: '1',
  //   target: '2',
  //   sourceHandle: '3',
  //   animated: true,
  //   style: { stroke: '#3366FF' },
  //   label: '100',
  //   labelStyle: { fill: '#3366FF', fontWeight: 700 },
  //   labelBgStyle: {
  //     fill: '#fff',
  //   },
  //   labelBgBorderRadius: 5,
  //   markerEnd: {
  //     type: MarkerType.ArrowClosed,
  //   },
  // },
];

// {
//   id: '1',
//   source: '1',
//   target: '2',
//   sourceHandle: '3',
//   animated: true,
//   style: { stroke: '#3366FF' },
//   label: '100',
//   labelStyle: { fill: '#3366FF', fontWeight: 700 },
//   labelBgStyle: {
//     fill: '#fff',
//   },
//   labelBgBorderRadius: 5,
//   markerEnd: {
//     type: MarkerType.ArrowClosed,
//   },
// },

export const TransactionDetailRowMockUp = [
  {
    timestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    step: '0100',
    status: 'OK',
  },
  {
    timestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    step: '0200',
    status: 'OK',
  },
  {
    timestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    step: '0300',
    status: 'OK',
  },
  {
    timestamp: dayjs().format('YYYY-MM-DD HH:mm:ss.SSS'),
    step: '0400',
    status: 'OK',
  },
];

export const TransactionNodeDataMock = {
  label: 'MCI',
  startTimestamp: '2022-09-15',
  endTimestamp: '2022-09-15',
  elapsedTime: '400',
  node: '2',
  userNo: '1',
  branchCode: '01',
  status: 'OK',
  interfaceId: 'NIB006_0002',
  interfacePattern: 'asd',
  interfaceName: 'DB미통합 TO 계정계',
  beforeSendChannelCode: 'MCI',
  firstSendChannelCode: 'MCI',
  serviceCode: 'CIM99001IN',
  bankName: 'DB저축은행',
  flowId: 'TCP_B2F_Q',
  sourceChannel: 'NIBO06',
  bankCode: 'asd',
  errorMessage: 'ASD',
  sourceIpPort: '123',
  targetChannel: 'FWKO33',
  targetIpPort: '172.123.1.231',
  mstSeq: '007_12"32"4892749817151235',
  serviceType: 'MCI',
  serviceName: '엠씨아이',
  message: '정상처리',
  details: [
    {
      timestamp: '2022-09-15',
      step: '0100',
      status: 'ING',
    },
    {
      timestamp: '2022-09-15',
      step: '0200',
      status: 'ING',
    },
    {
      timestamp: '2022-09-15',
      step: '0300',
      status: 'ING',
    },
    {
      timestamp: '2022-09-15',
      step: '0400',
      status: 'ING',
    },
  ],
};

export const InterfaceListMock = [
  {
    group: ['MCI'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '위험(3) 치명(3)',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '치명',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '경고',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '주의',
    id: 1,
    test: '테스트3',
  },
  {
    group: ['MCI', 'MCI#1'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '경고',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '위험',
    closeWaitCount: Math.floor(Math.random() * 100),
    test: ['테스트1', '테스트2'],
    closeWaitCountStatus: '정상',
    id: 2,
  },
  {
    group: ['MCI', 'MCI#1', '이기종'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 3,
  },
  {
    group: ['MCI', 'MCI#1', '이기종2'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 4,
  },
  {
    group: ['MCI', 'MCI#1', '이기종3'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 5,
  },
  {
    group: ['FEP'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '위험(3) 치명(3)',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '치명',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '경고',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '주의',
    id: 6,
    test: '테스트3',
  },
  {
    group: ['FEP', 'FEP#1'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '경고',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '위험',
    closeWaitCount: Math.floor(Math.random() * 100),
    test: ['테스트1', '테스트2'],
    closeWaitCountStatus: '정상',
    id: 7,
  },
  {
    group: ['FEP', 'FEP#1', '이기종'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 8,
  },
  {
    group: ['FEP', 'FEP#1', '이기종2'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 9,
  },
  {
    group: ['FEP', 'FEP#1', '이기종3'],
    port: '12351',
    responseTime: Math.floor(Math.random() * 100),
    responseTimeStatus: '정상',
    ingCount: Math.floor(Math.random() * 100),
    ingCountStatus: '정상',
    transmitQueue: Math.floor(Math.random() * 100),
    transmitQueueStatus: '정상',
    receiveQueue: Math.floor(Math.random() * 100),
    receiveQueueStatus: '정상',
    closeWaitCount: Math.floor(Math.random() * 100),
    closeWaitCountStatus: '정상',
    id: 10,
  },
];
